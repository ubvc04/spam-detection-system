# Generated by Django 5.2.4 on 2025-07-27 08:45

import django.core.validators
import django.db.models.deletion
import django.utils.timezone
import uuid
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ("detector", "0001_initial"),
    ]

    operations = [
        migrations.CreateModel(
            name="BatchProcessingJob",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "job_type",
                    models.CharField(
                        choices=[
                            ("email", "Email Phishing"),
                            ("sms", "SMS Spam"),
                            ("url", "URL Malicious"),
                            ("file", "File Analysis"),
                            ("batch", "Batch Processing"),
                        ],
                        max_length=20,
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("pending", "Pending"),
                            ("processing", "Processing"),
                            ("completed", "Completed"),
                            ("failed", "Failed"),
                            ("cancelled", "Cancelled"),
                        ],
                        default="pending",
                        max_length=20,
                    ),
                ),
                ("file_name", models.CharField(max_length=255)),
                ("file_size", models.BigIntegerField()),
                ("total_items", models.IntegerField(default=0)),
                ("processed_items", models.IntegerField(default=0)),
                ("successful_items", models.IntegerField(default=0)),
                ("failed_items", models.IntegerField(default=0)),
                ("created_at", models.DateTimeField(default=django.utils.timezone.now)),
                ("started_at", models.DateTimeField(blank=True, null=True)),
                ("completed_at", models.DateTimeField(blank=True, null=True)),
                (
                    "results_file",
                    models.FileField(blank=True, null=True, upload_to="batch_results/"),
                ),
                ("error_log", models.TextField(blank=True)),
                ("user_agent", models.CharField(blank=True, max_length=500)),
                ("source_ip", models.GenericIPAddressField(blank=True, null=True)),
            ],
            options={
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="RiskLevel",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=20, unique=True)),
                ("level", models.IntegerField(unique=True)),
                ("color", models.CharField(max_length=7)),
                ("description", models.TextField()),
            ],
            options={
                "ordering": ["level"],
            },
        ),
        migrations.CreateModel(
            name="ThreatCategory",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100, unique=True)),
                ("description", models.TextField()),
                ("color", models.CharField(default="#FF0000", max_length=7)),
                ("icon", models.CharField(default="warning", max_length=50)),
            ],
            options={
                "verbose_name_plural": "Threat Categories",
            },
        ),
        migrations.CreateModel(
            name="EnhancedPredictionHistory",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "prediction_type",
                    models.CharField(
                        choices=[
                            ("email", "Email Phishing"),
                            ("sms", "SMS Spam"),
                            ("url", "URL Malicious"),
                            ("file", "File Analysis"),
                            ("batch", "Batch Processing"),
                        ],
                        max_length=10,
                    ),
                ),
                ("input_text", models.TextField()),
                ("predicted_label", models.CharField(max_length=50)),
                (
                    "confidence_score",
                    models.FloatField(
                        validators=[
                            django.core.validators.MinValueValidator(0),
                            django.core.validators.MaxValueValidator(100),
                        ]
                    ),
                ),
                ("timestamp", models.DateTimeField(default=django.utils.timezone.now)),
                (
                    "risk_score",
                    models.FloatField(
                        default=0.0,
                        validators=[
                            django.core.validators.MinValueValidator(0),
                            django.core.validators.MaxValueValidator(100),
                        ],
                    ),
                ),
                ("domain", models.CharField(blank=True, max_length=255)),
                ("ip_address", models.GenericIPAddressField(blank=True, null=True)),
                ("country", models.CharField(blank=True, max_length=100)),
                ("city", models.CharField(blank=True, max_length=100)),
                ("isp", models.CharField(blank=True, max_length=200)),
                ("ssl_valid", models.BooleanField(blank=True, null=True)),
                ("ssl_expiry", models.DateTimeField(blank=True, null=True)),
                ("user_agent", models.CharField(blank=True, max_length=500)),
                ("source_ip", models.GenericIPAddressField(blank=True, null=True)),
                ("processing_time", models.FloatField(default=0.0)),
                ("batch_id", models.UUIDField(blank=True, null=True)),
                ("batch_position", models.IntegerField(default=0)),
                (
                    "risk_level",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="detector.risklevel",
                    ),
                ),
                (
                    "threat_category",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="detector.threatcategory",
                    ),
                ),
            ],
            options={
                "ordering": ["-timestamp"],
            },
        ),
        migrations.CreateModel(
            name="DomainReputation",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("domain", models.CharField(max_length=255, unique=True)),
                ("registration_date", models.DateTimeField(blank=True, null=True)),
                ("expiry_date", models.DateTimeField(blank=True, null=True)),
                ("registrar", models.CharField(blank=True, max_length=200)),
                (
                    "reputation_score",
                    models.FloatField(
                        default=0.0,
                        validators=[
                            django.core.validators.MinValueValidator(-100),
                            django.core.validators.MaxValueValidator(100),
                        ],
                    ),
                ),
                (
                    "threat_score",
                    models.FloatField(
                        default=0.0,
                        validators=[
                            django.core.validators.MinValueValidator(0),
                            django.core.validators.MaxValueValidator(100),
                        ],
                    ),
                ),
                ("is_blacklisted", models.BooleanField(default=False)),
                ("country", models.CharField(blank=True, max_length=100)),
                ("city", models.CharField(blank=True, max_length=100)),
                ("isp", models.CharField(blank=True, max_length=200)),
                ("ssl_valid", models.BooleanField(blank=True, null=True)),
                ("ssl_expiry", models.DateTimeField(blank=True, null=True)),
                ("ssl_issuer", models.CharField(blank=True, max_length=200)),
                ("first_seen", models.DateTimeField(default=django.utils.timezone.now)),
                (
                    "last_checked",
                    models.DateTimeField(default=django.utils.timezone.now),
                ),
                ("check_count", models.IntegerField(default=1)),
                (
                    "threat_categories",
                    models.ManyToManyField(blank=True, to="detector.threatcategory"),
                ),
            ],
            options={
                "ordering": ["-last_checked"],
            },
        ),
        migrations.CreateModel(
            name="ThreatPattern",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("pattern_type", models.CharField(max_length=50)),
                ("pattern_value", models.TextField()),
                (
                    "confidence",
                    models.FloatField(
                        validators=[
                            django.core.validators.MinValueValidator(0),
                            django.core.validators.MaxValueValidator(100),
                        ]
                    ),
                ),
                ("first_seen", models.DateTimeField(default=django.utils.timezone.now)),
                ("last_seen", models.DateTimeField(default=django.utils.timezone.now)),
                ("occurrence_count", models.IntegerField(default=1)),
                ("description", models.TextField(blank=True)),
                (
                    "risk_level",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="detector.risklevel",
                    ),
                ),
                (
                    "threat_category",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="detector.threatcategory",
                    ),
                ),
            ],
            options={
                "ordering": ["-last_seen"],
            },
        ),
        migrations.CreateModel(
            name="URLScreenshot",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("url", models.URLField(max_length=2000)),
                ("screenshot", models.ImageField(upload_to="screenshots/")),
                (
                    "thumbnail",
                    models.ImageField(
                        blank=True, null=True, upload_to="screenshots/thumbnails/"
                    ),
                ),
                ("width", models.IntegerField()),
                ("height", models.IntegerField()),
                ("file_size", models.IntegerField()),
                ("created_at", models.DateTimeField(default=django.utils.timezone.now)),
                ("processing_time", models.FloatField(default=0.0)),
                (
                    "prediction",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="detector.enhancedpredictionhistory",
                    ),
                ),
            ],
            options={
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="AuditLog",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("timestamp", models.DateTimeField(default=django.utils.timezone.now)),
                (
                    "action",
                    models.CharField(
                        choices=[
                            ("prediction", "Prediction Made"),
                            ("batch_upload", "Batch Upload"),
                            ("history_clear", "History Cleared"),
                            ("admin_action", "Admin Action"),
                            ("api_access", "API Access"),
                            ("file_upload", "File Upload"),
                        ],
                        max_length=20,
                    ),
                ),
                ("user_ip", models.GenericIPAddressField()),
                ("user_agent", models.CharField(blank=True, max_length=500)),
                ("details", models.JSONField(blank=True, default=dict)),
                ("success", models.BooleanField(default=True)),
                ("error_message", models.TextField(blank=True)),
                (
                    "batch_job",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="detector.batchprocessingjob",
                    ),
                ),
                (
                    "prediction",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="detector.enhancedpredictionhistory",
                    ),
                ),
            ],
            options={
                "ordering": ["-timestamp"],
                "indexes": [
                    models.Index(
                        fields=["action", "timestamp"],
                        name="detector_au_action_435f8f_idx",
                    ),
                    models.Index(
                        fields=["user_ip", "timestamp"],
                        name="detector_au_user_ip_f1ce50_idx",
                    ),
                ],
            },
        ),
        migrations.AddIndex(
            model_name="enhancedpredictionhistory",
            index=models.Index(
                fields=["prediction_type", "timestamp"],
                name="detector_en_predict_519108_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="enhancedpredictionhistory",
            index=models.Index(
                fields=["threat_category", "risk_level"],
                name="detector_en_threat__1be044_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="enhancedpredictionhistory",
            index=models.Index(
                fields=["domain", "country"], name="detector_en_domain_8e3b6d_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="enhancedpredictionhistory",
            index=models.Index(
                fields=["batch_id"], name="detector_en_batch_i_50f344_idx"
            ),
        ),
        migrations.AlterUniqueTogether(
            name="threatpattern",
            unique_together={("pattern_type", "pattern_value")},
        ),
    ]
